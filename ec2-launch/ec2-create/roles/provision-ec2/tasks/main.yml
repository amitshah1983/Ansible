---
 - name: Create a security group
   local_action: 
     module: ec2_group
     name: "{{ ec2_security_group }}"
     description: Security Group for webserver Server
     region: "{{ ec2_region }}"
     rules:
       - proto: tcp
         from_port: 22
         to_port: 22
         cidr_ip: 0.0.0.0/0
       - proto: tcp
         from_port: 80
         to_port: 80
         cidr_ip: 0.0.0.0/0
       - proto: tcp
         from_port: 443
         to_port: 443
         cidr_ip: 0.0.0.0/0
     rules_egress:
       - proto: all
         cidr_ip: 0.0.0.0/0
   register: basic_firewall
 
 - name: Amazon EC2 | Create Key Pair
   ec2_key:
     name: "{{ ec2_keypair }}"
     region: "{{ ec2_region }}"
     key_material: "{{ item }}"
   with_file: /root/.ssh/id_rsa.pub

 - name: Provision EC2 Box
   local_action:
     module: ec2
     keypair: "{{ ec2_keypair }}"
     group: "{{ ec2_security_group }}"
     instance_type: "{{ ec2_instance_type }}"
     image: "{{ ec2_image }}"
     vpc_subnet_id: "{{ ec2_subnet_ids|random }}"
     region: "{{ ec2_region }}"
     instance_tags: '{"Name":"{{ec2_tag_Name}}","Type":"{{ec2_tag_Type}}","Environment":"{{ec2_tag_Environment}}"}'
     assign_public_ip: yes
     wait: true
     count: "{{ ec2_count }}"
     volumes: 
     - device_name: /dev/sda1
       device_type: gp2
       volume_size: "{{ ec2_volume_size }}"
       delete_on_termination: true
   register: ec2

 - debug: var=item
   with_items: "{{ ec2.instances }}"

 - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
   local_action: lineinfile 
                 dest="./hosts" 
                 regexp={{ item.public_ip }} 
                 insertafter="[{{ ec2_tag_Type }}]" line="{{ ec2_tag_Name }} ansible_host={{ item.public_ip }}"
   with_items: "{{ ec2.instances }}"

 - name: Wait for the instances to boot by checking the ssh port
   wait_for: host={{item.public_ip}} port=22 delay=60 timeout=320 state=started
   with_items: "{{ ec2.instances }}"
